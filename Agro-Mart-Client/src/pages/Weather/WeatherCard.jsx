import React, { useEffect, useState } from "react";
import useGeolocation from "../../hooks/useGeolocation";
import { requestNotificationPermission } from "../../store/requestNotificationPermission";
import { TiWeatherPartlySunny } from "react-icons/ti";

const API_KEY = import.meta.env.VITE_Weather_API_KEY;

const WeatherCard = ({ onWeatherTypeChange, setWeather }) => {
  const location = useGeolocation();
  const [weatherData, setWeatherData] = useState(null);

  useEffect(() => {
    if (location) {
      const { lat, lon } = location;
      fetch(
        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric&lang=bn`
      )
        .then((res) => res.json())
        .then(async (data) => {
          setWeatherData(data);
          setWeather(data);
          onWeatherTypeChange?.(data.weather[0].main);

          const granted = await requestNotificationPermission(); 

          if (granted) {
            const weatherMain = data.weather[0].main;
            const alerts = {
              Rain: "ржЖржЬ ржмрзГрж╖рзНржЯрж┐ рж╣рждрзЗ ржкрж╛рж░рзЗ, ржжржпрж╝рж╛ ржХрж░рзЗ рж╢рж╕рзНржп ржврзЗржХрзЗ рж░рж╛ржЦрзБржиред ЁЯМзя╕П",
              Thunderstorm: "ржЭрзЬрзЗрж░ ржЖрж╢ржЩрзНржХрж╛ рж░рзЯрзЗржЫрзЗ! рж╕рждрж░рзНржХ ржерж╛ржХрзБржиред тЫИя╕П",
              Extreme: "рждрзАржмрзНрж░ ржЖржмрж╣рж╛ржУрзЯрж╛ ржЪрж▓ржЫрзЗ, ржХрзГрж╖рж┐ржХрж╛ржЬрзЗ рж╕рждрж░рзНржХ ржерж╛ржХрзБржиред ЁЯФе",
            };

            if (alerts[weatherMain]) {
              new Notification("ЁЯМжя╕П ржХрзГрж╖рж┐ рж╕рждрж░рзНржХрждрж╛", {
                body: alerts[weatherMain],
                icon: <TiWeatherPartlySunny/>, 
              });
            }
          }
        })
        .catch((error) => {
          console.error("Error fetching weather data:", error);
        });
    }
  }, [location, onWeatherTypeChange, setWeather]);

  if (!weatherData || !weatherData.main || !weatherData.weather) {
    return <div>ржЖржмрж╣рж╛ржУрзЯрж╛рж░ рждржерзНржп рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...</div>;
  }

  return (
    <div className="p-4 bg-blue-100/50 backdrop-blur-md w-fit rounded-xl shadow-md">
      <h2 className="text-xl font-semibold mb-2">ржЖржкржирж╛рж░ ржПрж▓рж╛ржХрж╛рж░ ржЖржмрж╣рж╛ржУрзЯрж╛</h2>
      <p>ЁЯМбя╕П рждрж╛ржкржорж╛рждрзНрж░рж╛: {weatherData?.main?.temp}┬░C</p>
      <p>ЁЯТз ржЖрж░рзНржжрзНрж░рждрж╛: {weatherData?.main?.humidity}%</p>
      <p>ЁЯМмя╕П ржмрж╛рждрж╛рж╕: {weatherData?.wind?.speed} m/s</p>
      <p>ЁЯМея╕П ржЕржмрж╕рзНржерж╛: {weatherData?.weather?.[0]?.description}</p>
    </div>
  );
};

export default WeatherCard;
